{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "# ApolloElement\n\nCustom Element base class for apollo custom elements.",
      "summary": "",
      "path": "apollo-element.js",
      "properties": [
        {
          "name": "context",
          "type": "Object",
          "description": "Context to be passed to link execution chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "data",
          "type": "Object",
          "description": "Latest data.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 13
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "error",
          "type": "Object",
          "description": "Latest error.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 14
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "loading",
          "type": "Boolean",
          "description": "Whether a request is in flight.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "client",
          "type": "ApolloClient",
          "description": "The apollo client instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 15
            }
          },
          "metadata": {},
          "defaultValue": "window.__APOLLO_CLIENT__",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "document",
          "type": "DocumentNode",
          "description": "GraphQL Document",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloElementMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "onElementMutation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 42,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "ApolloElement"
    },
    {
      "description": "# ApolloMutation\n\nüë©‚ÄçüöÄ A custom element base class to issue mutations via your Apollo cache.\n\n## üë©‚ÄçüöÄ Usage\n\n```js\nimport { client } from './apollo-client';\nimport { ApolloMutation, html } from 'lit-apollo';\n\nclass MutationElement extends ApolloMutation {\n  render() {\n    return html`<input on-input=\"${this.onInput.bind(this)}\"\n  }\n\n  constructor() {\n    super();\n    this.client = client;\n    this.mutation = gql`\n      mutation InputMutation {\n        updateInput {\n          input\n        }\n      }\n    `;\n  }\n\n  onInput(event) {\n    const { mutation } = this;\n    const variables = { input: event.target.value };\n    return this.mutate({\n      mutation,\n      variables,\n    });\n  }\n};\n\ncustomElements.define('mutation-element', MutationElement)\n```",
      "summary": "",
      "path": "apollo-mutation.js",
      "properties": [
        {
          "name": "context",
          "type": "Object",
          "description": "Context to be passed to link execution chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "data",
          "type": "Object",
          "description": "Latest data.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 13
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "error",
          "type": "Object",
          "description": "Latest error.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 14
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "loading",
          "type": "Boolean",
          "description": "Whether a request is in flight.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "client",
          "type": "ApolloClient",
          "description": "The apollo client instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 15
            }
          },
          "metadata": {},
          "defaultValue": "window.__APOLLO_CLIENT__",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "document",
          "type": "DocumentNode",
          "description": "GraphQL Document",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "ignoreResults",
          "type": "Boolean",
          "description": "Whether to ignore the results of the mutation.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 36,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 22
            }
          },
          "metadata": {},
          "defaultValue": "false",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "mostRecentMutationId",
          "type": "Number",
          "description": "The ID number of the most recent mutation since the element was instantiated.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 29
            }
          },
          "metadata": {},
          "defaultValue": "0",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "onCompleted",
          "type": "Function",
          "description": "Callback for when a mutation is completed.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 20
            }
          },
          "metadata": {},
          "defaultValue": "() => undefined",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "onError",
          "type": "Function",
          "description": "Callback for when an error occurs in mutation.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "() => undefined",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "optimisticResponse",
          "type": "Object",
          "description": "An object that represents the result of this mutation that\nwill be optimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\n     the result of a mutation immediately, and update the UI later if any errors appear.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 27
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "onUpdate",
          "type": "UpdateFunction",
          "description": "A function which updates the apollo cache when the query responds.\nThis function will be called twice over the lifecycle of a mutation. Once at the very beginning if an optimisticResponse was provided. The writes created from the optimistic data will be rolled back before the second time this function is called which is when the mutation has succesfully resolved. At that point update will be called with the actual mutation result and those writes will not be rolled back.\nThe reason a DataProxy is provided instead of the user calling the methods directly on ApolloClient is that all of the writes are batched together at the end of the update, and it allows for writes generated by optimistic data to be rolled back.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 17
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "variables",
          "type": "Object",
          "description": "An object that maps from the name of a variable as used in the mutation GraphQL document to that variable's value.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 18
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "mutation",
          "type": "DocumentNode",
          "description": "The mutation.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 19,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloMutationMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "onElementMutation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "generateMutationId",
          "description": "Increments and returns the most recent mutation id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "isMostRecentMutation",
          "description": "Returns true when an ID matches the most recent mutation id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 102,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "mutationId",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "mutate",
          "description": "This resolves a single mutation according to the options specified and returns a Promise which is either resolved with the resulting data or rejected with an error.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  context = this.context,\n  errorPolicy = this.errorPolicy,\n  fetchPolicy = this.fetchPolicy,\n  mutation = this.mutation,\n  optimisticResponse = this.optimisticResponse,\n  refetchQueries = this.refetchQueries,\n  update = this.onUpdate,\n  awaitRefetchQueries = this.awaitRefetchQueries,\n  variables = this.variables\n} = this"
            }
          ],
          "return": {
            "type": "Promise.<FetchResult>"
          },
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "onCompletedMutation",
          "description": "Callback for when a mutation is completed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 172,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response",
              "type": "FetchResult"
            },
            {
              "name": "mutationId",
              "type": "Number"
            }
          ],
          "return": {
            "type": "any"
          },
          "inheritedFrom": "ApolloMutationMixin"
        },
        {
          "name": "onMutationError",
          "description": "Callback for when a mutation fails.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-mutation-mixin.js",
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error",
              "type": "Error"
            },
            {
              "name": "mutationId",
              "type": "Number",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "any"
          },
          "inheritedFrom": "ApolloMutationMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 7
        },
        "end": {
          "line": 58,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "ApolloMutation"
    },
    {
      "description": "# ApolloQuery\n\nüöÄ A custom element base class that connects to your Apollo cache.\n\n## üë©‚ÄçüöÄ Usage\n\n```js\nimport { client } from './apollo-client.js';\nimport { ApolloQuery, html } from 'lit-apollo';\nimport gql from 'graphql-tag';\n\nconst errorTemplate = ({message = 'Unknown Error'}) => html`\n  <h1>üò¢ Such Sad, Very Error! üò∞</h1>\n  <div>${message}</div>`\n\nclass ConnectedElement extends ApolloQuery {\n  render() {\n    const { data, error, loading, networkStatus } = this;\n    return\n        loading ? html`<such-overlay-very-spin></such-overlay-very-spin>`\n      : error ? errorTemplate(error)\n      : html`<p>${data.helloWorld.greeting}, ${data.helloWorld.name}</p>`\n  }\n\n  constructor() {\n    super();\n    this.client = client;\n    this.query = gql`\n      query {\n        helloWorld {\n          name\n          greeting\n        }\n      }\n    `;\n  }\n};\n\ncustomElements.define('connected-element', ConnectedElement)\n```",
      "summary": "",
      "path": "apollo-query.js",
      "properties": [
        {
          "name": "context",
          "type": "Object",
          "description": "Context to be passed to link execution chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "data",
          "type": "Object",
          "description": "Latest data.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 13
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "error",
          "type": "Object",
          "description": "Latest error.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 14
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "loading",
          "type": "Boolean",
          "description": "Whether a request is in flight.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "client",
          "type": "ApolloClient",
          "description": "The apollo client instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 15
            }
          },
          "metadata": {},
          "defaultValue": "window.__APOLLO_CLIENT__",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "document",
          "type": "DocumentNode",
          "description": "GraphQL Document",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "errorPolicy",
          "type": "ErrorPolicy",
          "description": "Specifies the ErrorPolicy to be used for this query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 20
            }
          },
          "metadata": {},
          "defaultValue": "'none'",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "fetchPolicy",
          "type": "FetchPolicy",
          "description": "Specifies the FetchPolicy to be used for this query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 20
            }
          },
          "metadata": {},
          "defaultValue": "'cache-first'",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "fetchResults",
          "type": "Boolean",
          "description": "Whether or not to fetch results.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 21
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "pollInterval",
          "type": "Number",
          "description": "The time interval (in milliseconds) on which this query should be refetched from the server.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 21
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "notifyOnNetworkStatusChange",
          "type": "Boolean",
          "description": "Whether or not updates to the network status should trigger next on the observer of this query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 36
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "tryFetch",
          "type": "Boolean",
          "description": "Try and fetch new results even if the variables haven't changed (we may still just hit the store, but if there's nothing in there will refetch).",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 17
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "observableQuery",
          "type": "ObservableQuery",
          "description": "The apollo ObservableQuery watching this element's query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 25
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "query",
          "type": "DocumentNode",
          "description": "A GraphQL document containing a single query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "variables",
          "type": "Object.<string, *>",
          "description": "An object map from variable name to variable value, where the variables are used within the GraphQL query.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "options",
          "type": "ModifiableWatchQueryOptions",
          "description": "Exposes the [`ObservableQuery#setOptions`](https://www.apollographql.com/docs/react/api/apollo-client.html#ObservableQuery.setOptions) method.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloQueryMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "onElementMutation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "setVariables",
          "description": "Exposes the [`ObservableQuery#setVariables`](https://www.apollographql.com/docs/react/api/apollo-client.html#ObservableQuery.setVariables) method.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "variables",
              "type": "Object",
              "description": "The new set of variables. If there are missing variables, the previous values of those variables will be used."
            },
            {
              "name": "tryFetch",
              "type": "boolean=",
              "defaultValue": "this.tryFetch",
              "description": "Try and fetch new results even if the variables haven't changed (we may still just hit the store, but if there's nothing in there will refetch)."
            },
            {
              "name": "fetchResults",
              "type": "boolean=",
              "defaultValue": "this.fetchResults",
              "description": "Option to ignore fetching results when updating variables."
            }
          ],
          "return": {
            "type": "Promise.<ApolloQueryResult>"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "subscribe",
          "description": "Resets the observableQuery and subscribes.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  query = this.query,\n  variables = this.variables\n} = {}"
            }
          ],
          "return": {
            "type": "Promise.<ZenObservable.Observer.<ApolloQueryResult.<TData>>>"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "subscribeToMore",
          "description": "Lets you pass a GraphQL subscription and updateQuery function\nto subscribe to more updates for your query.\n\nThe `updateQuery` parameter is a function that takes the previous query data,\nthen a `{ subscriptionData: TSubscriptionResult }` object,\nand returns an object with updated query data based on the new results.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  document,\n  updateQuery\n} = {}"
            }
          ],
          "return": {
            "type": "function (): void"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "executeQuery",
          "description": "Executes a Query once and updates the component with the result",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  metadata,\n  context,\n  query = this.query,\n  variables = this.variables,\n  fetchPolicy = this.fetchPolicy,\n  errorPolicy = this.errorPolicy,\n  fetchResults = this.fetchResults\n} = this"
            }
          ],
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "fetchMore",
          "description": "Exposes the `ObservableQuery#fetchMore` method.\nhttps://www.apollographql.com/docs/react/api/apollo-client.html#ObservableQuery.fetchMore\n\nThe optional `updateQuery` parameter is a function that takes the previous query data,\nthen a `{ subscriptionData: TSubscriptionResult }` object,\nand returns an object with updated query data based on the new results.\n\nThe optional `variables` parameter is an optional new variables object.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 220,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  query = this.query,\n  updateQuery,\n  variables\n} = {}"
            }
          ],
          "return": {
            "type": "Promise.<ApolloQueryResult>"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "watchQuery",
          "description": "Creates an instance of ObservableQuery with the options provided by the element.\n- `context` Context to be passed to link execution chain\n- `errorPolicy` Specifies the ErrorPolicy to be used for this query\n- `fetchPolicy` Specifies the FetchPolicy to be used for this query\n- `fetchResults` Whether or not to fetch results\n- `metadata` Arbitrary metadata stored in the store with this query. Designed for debugging, developer tools, etc.\n- `notifyOnNetworkStatusChange` Whether or not updates to the network status should trigger next on the observer of this query\n- `pollInterval` The time interval (in milliseconds) on which this query should be refetched from the server.\n- `query` A GraphQL document that consists of a single query to be sent down to the server.\n- `variables` A map going from variable name to variable value, where the variables are used within the GraphQL query.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  context = this.context,\n  errorPolicy = this.errorPolicy,\n  fetchPolicy = this.fetchPolicy,\n  fetchResults = this.fetchResults,\n  metadata = this.metadata,\n  notifyOnNetworkStatusChange = this.notifyOnNetworkStatusChange,\n  pollInterval = this.pollInterval,\n  query = this.query,\n  variables = this.variables\n} = this"
            }
          ],
          "return": {
            "type": "ObservableQuery"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "nextData",
          "description": "Updates the element with the result of a query.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  data,\n  loading,\n  networkStatus,\n  stale\n}"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "nextError",
          "description": "Updates the element with the error when the query fails.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-query-mixin.js",
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 301,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error",
              "type": "Error"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloQueryMixin"
        },
        {
          "name": "shouldUpdate",
          "description": "By default, will only render if\n  - The component has `data` or\n  - The component has an `error` or\n  - The component has a `loading` status.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Whether the component should render."
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 50,
          "column": 7
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "ApolloQuery"
    },
    {
      "description": "# ApolloSubscription\n\nüöÄ A custom element base class that updates with an Apollo GraphQL subscription.\n\n## üë©‚ÄçüöÄ Usage\n\n```js\nimport { client } from './apollo-client.js';\nimport { ApolloSubscription, html } from 'lit-apollo';\nimport gql from 'graphql-tag';\n\nconst errorTemplate = ({message = 'Unknown Error'}) => html`\n  <h1>üò¢ Such Sad, Very Error! üò∞</h1>\n  <div>${message}</div>`\n\nclass SubscribingElement extends ApolloSubscription {\n  render() {\n    const { data, error = {}, loading } = this;\n    return\n        loading ? html`<such-overlay-very-spin></such-overlay-very-spin>`\n      : error ? errorTemplate(error)\n      : html`<p>${data.helloWorld.greeting}, ${data.helloWorld.name}</p>`\n  }\n\n  constructor() {\n    super();\n    this.client = client;\n    this.subscription = gql`\n      subscription {\n        helloWorld {\n          name\n          greeting\n        }\n      }\n    `;\n  }\n};\n\ncustomElements.define('connected-element', ConnectedElement)\n```",
      "summary": "",
      "path": "apollo-subscription.js",
      "properties": [
        {
          "name": "context",
          "type": "Object",
          "description": "Context to be passed to link execution chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "data",
          "type": "Object",
          "description": "Latest data.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 13
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "error",
          "type": "Object",
          "description": "Latest error.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 14
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "loading",
          "type": "Boolean",
          "description": "Whether a request is in flight.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 16
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "client",
          "type": "ApolloClient",
          "description": "The apollo client instance.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 15
            }
          },
          "metadata": {},
          "defaultValue": "window.__APOLLO_CLIENT__",
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "document",
          "type": "DocumentNode",
          "description": "GraphQL Document",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "fetchPolicy",
          "type": "FetchPolicy",
          "description": "Specifies the FetchPolicy to be used for this subscription.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 20
            }
          },
          "metadata": {},
          "defaultValue": "'cache-first'",
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "fetchResults",
          "type": "Boolean",
          "description": "Whether or not to fetch results.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 21
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "pollInterval",
          "type": "Number",
          "description": "The time interval (in milliseconds) on which this subscription should be refetched from the server.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 21
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "notifyOnNetworkStatusChange",
          "type": "Boolean",
          "description": "Whether or not updates to the network status should trigger next on the observer of this subscription.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 36
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "tryFetch",
          "type": "Boolean",
          "description": "Try and fetch new results even if the variables haven't changed (we may still just hit the store, but if there's nothing in there will refetch).",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 17
            }
          },
          "metadata": {},
          "defaultValue": "undefined",
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "observable",
          "type": "Observable",
          "description": "Observable watching this element's subscription.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 20
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "subscription",
          "type": "DocumentNode",
          "description": "A GraphQL document containing a single subscription.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "variables",
          "type": "Object.<string, *>",
          "description": "An object map from variable name to variable value, where the variables are used within the GraphQL subscription.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "ApolloSubscriptionMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "onElementMutation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-element-mixin.js",
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloElementMixin"
        },
        {
          "name": "subscribe",
          "description": "Resets the observable and subscribes.",
          "privacy": "public",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  fetchPolicy = this.fetchPolicy,\n  query = this.subscription,\n  variables = this.variables\n} = {}"
            }
          ],
          "return": {
            "type": "Promise.<ZenObservable.Observer.<SubscriptionResult.<TData>>>"
          },
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "nextData",
          "description": "Updates the element with the result of a subscription.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  data\n}"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "nextError",
          "description": "Updates the element with the error when the subscription fails.",
          "privacy": "protected",
          "sourceRange": {
            "file": "node_modules/%40apollo-elements/mixins/apollo-subscription-mixin.js",
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error",
              "type": "Error"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApolloSubscriptionMixin"
        },
        {
          "name": "shouldUpdate",
          "description": "By default, will only render if\n  - The component has `data` or\n  - The component has an `error` or\n  - The component is `loading`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Whether the component should render."
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 50,
          "column": 7
        },
        "end": {
          "line": 67,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "ApolloSubscription"
    }
  ]
}
