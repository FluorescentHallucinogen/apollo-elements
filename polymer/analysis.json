{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<apollo-mutation>` fires Polymer-style prop-changed events\nwhen its `called`, `data`, `error`, `loading` or `networkStatus`\nproperties change.\n\n## üë©‚ÄçüöÄ Usage\n```html\n<apollo-mutation id=\"userMutation\" data=\"{{data}}\">\n  <script type=\"application/graphql\">\n    mutation User($id: ID!, $name: String, $picture: String) {\n      user(id: $id, name: $name, picture: $picture) {\n        name\n        picture\n      }\n    }\n  </script>\n</apollo-mutation>\n\n<paper-input label=\"Name\" value=\"{{name}}\"></paper-input>\n<paper-input label=\"Picture URL\" value=\"{{picture}}\"></paper-input>\n<paper-button on-click=\"mutate\">Submit</paper-button>\n```\n\n```js\nmutate() {\n  const { name, picture } = this;\n  return this.$.userMutation.mutate({ variables: { name, picture } })\n}\n```",
      "summary": "",
      "path": "apollo-mutation.js",
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "description": "Fires a `*-changed` event.",
          "privacy": "public",
          "sourceRange": {
            "file": "notifying-element-mixin.js",
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "String",
              "description": "Name of the property."
            },
            {
              "name": "value",
              "type": "any",
              "description": "property value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NotifyingElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 23
        },
        "end": {
          "line": 74,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "ApolloMutation",
      "name": "ApolloMutation",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "apollo-mutation",
      "mixins": [
        "NotifyingElementMixin"
      ]
    },
    {
      "description": "`<apollo-query>` fires Polymer-style prop-changed events\nwhen its `data`, `error`, `loading` or `networkStatus`\nproperties change.\n\n## üë©‚ÄçüöÄ Usage\n```html\n<apollo-query data=\"{{data}}\" variables=\"[[variables]]\">\n  <script type=\"application/graphql\">\n    query User($id: ID!) {\n      user(id: $id) {\n        name\n        picture\n      }\n    }\n  </script>\n</apollo-query>\n\n<paper-icon-item>\n  <iron-image slot=\"item-icon\">[[data.user.picture]]</iron-image>\n  [[data.user.name]]\n</paper-icon-item>\n```",
      "summary": "",
      "path": "apollo-query.js",
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "description": "Fires a `*-changed` event.",
          "privacy": "public",
          "sourceRange": {
            "file": "notifying-element-mixin.js",
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "String",
              "description": "Name of the property."
            },
            {
              "name": "value",
              "type": "any",
              "description": "property value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NotifyingElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 20
        },
        "end": {
          "line": 68,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "ApolloQuery",
      "name": "ApolloQuery",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "apollo-query",
      "mixins": [
        "NotifyingElementMixin"
      ]
    },
    {
      "description": "`<apollo-subscription>` fires Polymer-style prop-changed events\nwhen its `data`, `error`, or `loading` properties change.\n\n## üë©‚ÄçüöÄ Usage\n```html\n<apollo-subscription data=\"{{data}}\" variables=\"[[variables]]\" on-data-changed=\"toast\">\n  <script type=\"application/graphql\">\n    subscription UserJoined($id: ID!) {\n      userJoined(id: $id) {\n        name\n        picture\n      }\n    }\n  </script>\n</apollo-subscription>\n\n<paper-toast duration=\"5000\" text=\"A wild [[data.userJoined.name]] approaches!\">\n  <iron-image>[[data.userJoined.picture]]</iron-image>\n</paper-toast>\n```",
      "summary": "",
      "path": "apollo-subscription.js",
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "description": "Fires a `*-changed` event.",
          "privacy": "public",
          "sourceRange": {
            "file": "notifying-element-mixin.js",
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "String",
              "description": "Name of the property."
            },
            {
              "name": "value",
              "type": "any",
              "description": "property value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "NotifyingElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 27
        },
        "end": {
          "line": 56,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "ApolloSubscription",
      "name": "ApolloSubscription",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "apollo-subscription",
      "mixins": [
        "NotifyingElementMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "`NotifyingElementMixin`: mixin which fires Polymer-style notification events.",
      "summary": "",
      "path": "notifying-element-mixin.js",
      "properties": [],
      "methods": [
        {
          "name": "notify",
          "description": "Fires a `*-changed` event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "String",
              "description": "Name of the property."
            },
            {
              "name": "value",
              "type": "any",
              "description": "property value"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 2
        }
      },
      "privacy": "public",
      "name": "NotifyingElementMixin",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "apollo-mutation.js",
      "properties": [
        {
          "name": "called",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "data",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "error",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "loading",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 43
        },
        "end": {
          "line": 74,
          "column": 1
        }
      },
      "privacy": "public"
    },
    {
      "description": "",
      "summary": "",
      "path": "apollo-query.js",
      "properties": [
        {
          "name": "data",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "error",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "loading",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "networkStatus",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 37
        },
        "end": {
          "line": 68,
          "column": 1
        }
      },
      "privacy": "public"
    },
    {
      "description": "",
      "summary": "",
      "path": "apollo-subscription.js",
      "properties": [
        {
          "name": "data",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "error",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "loading",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 51
        },
        "end": {
          "line": 56,
          "column": 1
        }
      },
      "privacy": "public"
    }
  ]
}
